---
description: 
globs: 
alwaysApply: true
---
# Version Control Guidelines

## Git Commit Message Format

- Use Conventional Commits standard
- Format: `<type>(<scope>): <description>`
- Type categories:
  - feat: New feature
  - fix: Bug fix
  - docs: Documentation update
  - style: Code formatting adjustment
  - refactor: Refactoring
  - test: Testing related
  - chore: Build/auxiliary tool changes

## Branch Naming

- Main branches:
  - `main`: Main release branch
  - `develop`: Development branch
- Feature branches:
  - `feat/<feature-name>`
  - `fix/<bug-name>`
  - `docs/<document-name>`
  - `refactor/<refactor-name>`

## Pull Request Guidelines

- PR title should use the same format as commit messages
- PR description should include:
  - Feature description
  - Testing method
  - Related issue links
  - Breaking changes (if any)

## Code Review Standards

- Review focus:
  - Code quality and style
  - Test coverage
  - Performance considerations
  - Security issues
  - Documentation completeness
- Use constructive comment tone
- Provide code examples when necessary

## Release Process

- Version numbers should use Semantic Versioning
- Release branch naming: `release/vX.Y.Z`
- Each release needs to update:
  - Version number
  - Changelog
  - Release Notes
  - Related documentation
